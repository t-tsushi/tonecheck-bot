const { App } = require('@slack/bolt');
const axios = require('axios');
const { detectLang, analyzeSentiment } = require('./services/analysis');
const { suggestRewrite } = require('./services/rewriter');

const app = new App({
  signingSecret: process.env.SLACK_SIGNING_SECRET,
  token: process.env.SLACK_BOT_TOKEN
});

app.command('/check', async ({ command, ack, say }) => {
  await ack();
  const text = command.text;
  const lang = detectLang(text);
  const sentiment = await analyzeSentiment(text, lang);
  let toneCategory;
  const score = sentiment.score;
  if (score < -0.4) {
    toneCategory = 'ÊîªÊíÉÁöÑ';
  } else if (score < -0.1) {
    toneCategory = 'ÊîªÊíÉÁöÑ„Åã„Å§ÊõñÊòß';
  } else if (score < 0.1) {
    toneCategory = 'ÊõñÊòß';
  } else {
    toneCategory = 'ÈÅ©Âàá';
  }
  const rewrite = await suggestRewrite(text, lang, toneCategory);
  let message = `üß† *ToneCheckÁµêÊûú*  \n\n`;
  message += `„ÉªË®ÄË™û: ${lang}  \n`;
  message += `„Éª„Éà„Éº„É≥ÂàÜÈ°û: ${toneCategory}  \n\n`;
  message += `üìÑ ÂÖÉ„ÅÆÊñáÁ´†:  \n${text}  \n\n`;
  message += `üí° ÊèêÊ°à„Åï„Çå„ÅüÊñáÁ´†:  \n${rewrite}`;
  await say({
    text: message,
    mrkdwn: true,
  });
});

// Start the app
(async () => {
  await app.start(process.env.PORT || 3000);
  console.log('‚ö°Ô∏è Bolt app is running!');
})();
